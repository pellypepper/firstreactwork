{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Calculator(){const[input,setInput]=useState('');const Clickbtn=value=>{setInput(prevInput=>prevInput+value);};const Erase=()=>{setInput('');};const Equal=()=>{try{const result=evaluateExpression(input);setInput(result.toString());}catch(error){setInput('Error');}};const evaluateExpression=expression=>{const sanitizedExpression=expression.replace(/[^-()\\d/*+.]/g,'');return parseExpression(sanitizedExpression);};const parseExpression=expression=>{const operators={'+':(a,b)=>a+b,'-':(a,b)=>a-b,'*':(a,b)=>a*b,'/':(a,b)=>a/b};const compute=tokens=>{let stack=[];let currentNumber='';let currentOperator='+';for(let i=0;i<=tokens.length;i++){const char=tokens[i]||' ';if(!isNaN(char)&&char!==' '){currentNumber+=char;}else if(char in operators||char===' '||i===tokens.length){if(currentNumber!==''){const num=parseFloat(currentNumber);switch(currentOperator){case'+':stack.push(num);break;case'-':stack.push(-num);break;case'*':stack.push(stack.pop()*num);break;case'/':stack.push(stack.pop()/num);break;default:break;}currentNumber='';}if(char!==' '){currentOperator=char;}}}return stack.reduce((acc,num)=>acc+num,0);};const tokens=expression.split(/([+\\-*/])/);return compute(tokens);};return/*#__PURE__*/_jsx(\"div\",{className:\"calculator-container container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"calculator-wrapper\",children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"textarea-wrapper\",id:\"input-area\",value:input,readOnly:true}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-wrapper1 btn-wrapper\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:Erase,children:\"C\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"+/-\"),children:\"+/-\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"%\"),children:\"%\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"/\"),children:\"/\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-wrapper btn-wrapper2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"7\"),children:\"7\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"8\"),children:\"8\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"9\"),children:\"9\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"*\"),children:\"x\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-wrapper btn-wrapper3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"4\"),children:\"4\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"5\"),children:\"5\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"6\"),children:\"6\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-wrapper btn-wrapper4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"1\"),children:\"1\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"2\"),children:\"2\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"3\"),children:\"3\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-wrapper btn-wrapper5\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"-\"),children:\"-\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"+\"),children:\"+\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\".\"),children:\".\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"equal-wrapper\",children:/*#__PURE__*/_jsx(\"button\",{onClick:Equal,children:\"=\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"zero-wrapper\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>Clickbtn(\"0\"),children:\"0\"})})]})});}export default Calculator;n;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Calculator","input","setInput","Clickbtn","value","prevInput","Erase","Equal","result","evaluateExpression","toString","error","expression","sanitizedExpression","replace","parseExpression","operators","+","a","b","-","*","/","compute","tokens","stack","currentNumber","currentOperator","i","length","char","isNaN","num","parseFloat","push","pop","reduce","acc","split","className","children","id","readOnly","onClick","n"],"sources":["/Users/touchbar/Documents/GitHub/firstreactwork/src/calculator.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Calculator() {\n  const [input, setInput] = useState('');\n\n  const Clickbtn = (value) => {\n    setInput((prevInput) => prevInput + value);\n  };\n\n  const Erase = () => {\n    setInput('');\n  };\n\n  const Equal = () => {\n    try {\n      const result = evaluateExpression(input);\n      setInput(result.toString());\n    } catch (error) {\n      setInput('Error');\n    }\n  };\n\n  const evaluateExpression = (expression) => {\n    const sanitizedExpression = expression.replace(/[^-()\\d/*+.]/g, '');\n    return parseExpression(sanitizedExpression);\n  };\n\n  const parseExpression = (expression) => {\n    const operators = {\n      '+': (a, b) => a + b,\n      '-': (a, b) => a - b,\n      '*': (a, b) => a * b,\n      '/': (a, b) => a / b,\n    };\n\n    const compute = (tokens) => {\n      let stack = [];\n      let currentNumber = '';\n      let currentOperator = '+';\n\n      for (let i = 0; i <= tokens.length; i++) {\n        const char = tokens[i] || ' ';\n        if (!isNaN(char) && char !== ' ') {\n          currentNumber += char;\n        } else if (char in operators || char === ' ' || i === tokens.length) {\n          if (currentNumber !== '') {\n            const num = parseFloat(currentNumber);\n            switch (currentOperator) {\n              case '+':\n                stack.push(num);\n                break;\n              case '-':\n                stack.push(-num);\n                break;\n              case '*':\n                stack.push(stack.pop() * num);\n                break;\n              case '/':\n                stack.push(stack.pop() / num);\n                break;\n              default:\n                break;\n            }\n            currentNumber = '';\n          }\n          if (char !== ' ') {\n            currentOperator = char;\n          }\n        }\n      }\n\n      return stack.reduce((acc, num) => acc + num, 0);\n    };\n\n    const tokens = expression.split(/([+\\-*/])/);\n    return compute(tokens);\n  };\n\n  return (\n    <div className=\"calculator-container container\">\n      <div className=\"calculator-wrapper\">\n        <textarea\n          className=\"textarea-wrapper\"\n          id=\"input-area\"\n          value={input}\n          readOnly\n        />\n        <div className=\"btn-wrapper1 btn-wrapper\">\n          <button onClick={Erase}>C</button>\n          <button onClick={() => Clickbtn(\"+/-\")}>+/-</button>\n          <button onClick={() => Clickbtn(\"%\")}>%</button>\n          <button onClick={() => Clickbtn(\"/\")}>/</button>\n        </div>\n        <div className=\"btn-wrapper btn-wrapper2\">\n          <button onClick={() => Clickbtn(\"7\")}>7</button>\n          <button onClick={() => Clickbtn(\"8\")}>8</button>\n          <button onClick={() => Clickbtn(\"9\")}>9</button>\n          <button onClick={() => Clickbtn(\"*\")}>x</button>\n        </div>\n        <div className=\"btn-wrapper btn-wrapper3\">\n          <button onClick={() => Clickbtn(\"4\")}>4</button>\n          <button onClick={() => Clickbtn(\"5\")}>5</button>\n          <button onClick={() => Clickbtn(\"6\")}>6</button>\n        </div>\n        <div className=\"btn-wrapper btn-wrapper4\">\n          <button onClick={() => Clickbtn(\"1\")}>1</button>\n          <button onClick={() => Clickbtn(\"2\")}>2</button>\n          <button onClick={() => Clickbtn(\"3\")}>3</button>\n        </div>\n        <div className=\"btn-wrapper btn-wrapper5\">\n          <button onClick={() => Clickbtn(\"-\")}>-</button>\n          <button onClick={() => Clickbtn(\"+\")}>+</button>\n          <button onClick={() => Clickbtn(\".\")}>.</button>\n        </div>\n        <div className=\"equal-wrapper\">\n          <button onClick={Equal}>=</button>\n        </div>\n        <div className=\"zero-wrapper\">\n          <button onClick={() => Clickbtn(\"0\")}>0</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Calculator;\nn"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}