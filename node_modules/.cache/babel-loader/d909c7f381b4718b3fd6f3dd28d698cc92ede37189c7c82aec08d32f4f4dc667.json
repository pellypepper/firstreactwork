{"ast":null,"code":"import React,{useState,useEffect,useCallback,useRef,useMemo}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Game(){const[question,setQuestion]=useState(\"\");const[hint,setHint]=useState(\"\");const[answer,setAnswer]=useState(\"\");const[input,setInput]=useState(\"\");const[timer,setTimer]=useState(0);const intervalId=useRef(null);const Gameplan=useMemo(()=>({\"first\":{\"question\":\"RUSSIA\",\"answer\":\"RUSSIA\",\"hint\":\"A Country in Europe\"},\"second\":{\"question\":\"RONALDO\",\"answer\":\"RONALDO\",\"hint\":\"A famous football player\"},\"third\":{\"question\":\"CUTLASS\",\"answer\":\"CUTLASS\",\"hint\":\"A Sharp object used for cutting things\"},\"fourth\":{\"question\":\"UNIVERSITY\",\"answer\":\"UNIVERSITY\",\"hint\":\"A Tertiary Institution where people study degree\"},\"fifth\":{\"question\":\"STATEMENT\",\"answer\":\"STATEMENT\",\"hint\":\"A declaration of something\"},\"sixth\":{\"question\":\"FEATHER\",\"answer\":\"FEATHER\",\"hint\":\"Hair like outer covering of birds\"}}),[]);const startTimer=useCallback(maxTime=>{if(intervalId.current){clearInterval(intervalId.current);}setTimer(maxTime);const id=setInterval(()=>{setTimer(prevTime=>{if(prevTime>1){return prevTime-1;}else{clearInterval(id);alert(\"Time off! The correct answer was: \".concat(answer));return 0;}});},1000);intervalId.current=id;},[answer]);const loadNewQuestion=useCallback(()=>{const randomKey=Object.keys(Gameplan)[Math.floor(Math.random()*Object.keys(Gameplan).length)];const word=Gameplan[randomKey].question;let wordArray=word.split(\"\");for(let i=wordArray.length-1;i>0;i--){let j=Math.floor(Math.random()*(i+1));[wordArray[i],wordArray[j]]=[wordArray[j],wordArray[i]];}setQuestion(wordArray.join(\"\"));setHint(Gameplan[randomKey].hint);setAnswer(Gameplan[randomKey].answer);setInput(\"\");startTimer(30);},[Gameplan,startTimer]);useEffect(()=>{loadNewQuestion();return()=>{if(intervalId.current){clearInterval(intervalId.current);}};// Cleanup on component unmount\n},[loadNewQuestion]);const handleSubmit=()=>{if(input.toUpperCase()===answer){window.confirm(\"Your Answer is correct\");loadNewQuestion();}else{window.alert(\"Your Answer is incorrect\");}};const handleReset=()=>{loadNewQuestion();};return/*#__PURE__*/_jsx(\"div\",{className:\"game-container container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"game-wrapper\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Word Scramble\"}),/*#__PURE__*/_jsx(\"p\",{className:\"line-wrapper\"}),/*#__PURE__*/_jsx(\"p\",{className:\"answer-wrapper\",children:question}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Hint: \",hint,\" \"]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Time left: \",/*#__PURE__*/_jsx(\"b\",{children:timer}),\" \"]}),/*#__PURE__*/_jsx(\"textarea\",{value:input,onChange:e=>setInput(e.target.value),placeholder:\"Enter a Valid Word\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-box\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleReset,className:\"btn1\",children:\"Refresh Word\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\"Check Word\"})]})]})});}export default Game;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useMemo","jsx","_jsx","jsxs","_jsxs","Game","question","setQuestion","hint","setHint","answer","setAnswer","input","setInput","timer","setTimer","intervalId","Gameplan","startTimer","maxTime","current","clearInterval","id","setInterval","prevTime","alert","concat","loadNewQuestion","randomKey","Object","keys","Math","floor","random","length","word","wordArray","split","i","j","join","handleSubmit","toUpperCase","window","confirm","handleReset","className","children","value","onChange","e","target","placeholder","onClick"],"sources":["/Users/touchbar/Documents/GitHub/firstreactwork/src/game.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef, useMemo } from 'react';\n\nfunction Game() {\n  const [question, setQuestion] = useState(\"\");\n  const [hint, setHint] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [timer, setTimer] = useState(0);\n  const intervalId = useRef(null);\n\n  const Gameplan = useMemo(() => ({\n    \"first\": {\n      \"question\": \"RUSSIA\",\n      \"answer\": \"RUSSIA\",\n      \"hint\": \"A Country in Europe\"\n    },\n    \"second\": {\n      \"question\": \"RONALDO\",\n      \"answer\": \"RONALDO\",\n      \"hint\": \"A famous football player\"\n    },\n    \"third\": {\n      \"question\": \"CUTLASS\",\n      \"answer\": \"CUTLASS\",\n      \"hint\": \"A Sharp object used for cutting things\"\n    },\n    \"fourth\": {\n      \"question\": \"UNIVERSITY\",\n      \"answer\": \"UNIVERSITY\",\n      \"hint\": \"A Tertiary Institution where people study degree\"\n    },\n    \"fifth\": {\n      \"question\": \"STATEMENT\",\n      \"answer\": \"STATEMENT\",\n      \"hint\": \"A declaration of something\"\n    },\n    \"sixth\": {\n      \"question\": \"FEATHER\",\n      \"answer\": \"FEATHER\",\n      \"hint\": \"Hair like outer covering of birds\"\n    }\n  }), []);\n\n  const startTimer = useCallback((maxTime) => {\n    if (intervalId.current) {\n      clearInterval(intervalId.current);\n    }\n    setTimer(maxTime);\n    const id = setInterval(() => {\n      setTimer((prevTime) => {\n        if (prevTime > 1) {\n          return prevTime - 1;\n        } else {\n          clearInterval(id);\n          alert(`Time off! The correct answer was: ${answer}`);\n          return 0;\n        }\n      });\n    }, 1000);\n    intervalId.current = id;\n  }, [answer]);\n\n  const loadNewQuestion = useCallback(() => {\n    const randomKey = Object.keys(Gameplan)[Math.floor(Math.random() * Object.keys(Gameplan).length)];\n    const word = Gameplan[randomKey].question;\n    let wordArray = word.split(\"\");\n\n    for (let i = wordArray.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [wordArray[i], wordArray[j]] = [wordArray[j], wordArray[i]];\n    }\n\n    setQuestion(wordArray.join(\"\"));\n    setHint(Gameplan[randomKey].hint);\n    setAnswer(Gameplan[randomKey].answer);\n    setInput(\"\");\n    startTimer(30);\n  }, [Gameplan, startTimer]);\n\n  useEffect(() => {\n    loadNewQuestion();\n    return () => {\n      if (intervalId.current) {\n        clearInterval(intervalId.current);\n      }\n    }; // Cleanup on component unmount\n  }, [loadNewQuestion]);\n\n  const handleSubmit = () => {\n    if (input.toUpperCase() === answer) {\n      window.confirm(\"Your Answer is correct\");\n      loadNewQuestion();\n    } else {\n      window.alert(\"Your Answer is incorrect\");\n    }\n  };\n\n  const handleReset = () => {\n    loadNewQuestion();\n  };\n\n  return (\n    <div className='game-container container'>\n      <div className='game-wrapper'>\n        <h2>Word Scramble</h2>\n        <p className=\"line-wrapper\"></p>\n        <p className='answer-wrapper'>{question}</p>\n        <span>Hint: {hint} </span>\n        <span>Time left: <b>{timer}</b> </span>\n        <textarea\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder='Enter a Valid Word'\n        ></textarea>\n        <div className='btn-box'>\n          <button onClick={handleReset} className=\"btn1\">Refresh Word</button>\n          <button onClick={handleSubmit}>Check Word</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}